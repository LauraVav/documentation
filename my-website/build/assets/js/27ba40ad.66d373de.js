"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8164],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return p}});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var o=a.createContext({}),m=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=m(e.components);return a.createElement(o.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,o=e.parentName,s=u(e,["components","mdxType","originalType","parentName"]),c=m(n),p=l,k=c["".concat(o,".").concat(p)]||c[p]||d[p]||r;return n?a.createElement(k,i(i({ref:t},s),{},{components:n})):a.createElement(k,i({ref:t},s))}));function p(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,i=new Array(r);i[0]=c;var u={};for(var o in t)hasOwnProperty.call(t,o)&&(u[o]=t[o]);u.originalType=e,u.mdxType="string"==typeof e?e:l,i[1]=u;for(var m=2;m<r;m++)i[m]=n[m];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},8215:function(e,t,n){var a=n(7294);t.Z=function(e){var t=e.children,n=e.hidden,l=e.className;return a.createElement("div",{role:"tabpanel",hidden:n,className:l},t)}},6396:function(e,t,n){n.d(t,{Z:function(){return c}});var a=n(7462),l=n(7294),r=n(2389),i=n(9443);var u=function(){var e=(0,l.useContext)(i.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},o=n(9521),m=n(6010),s="tabItem_1uMI";function d(e){var t,n,a,r=e.lazy,i=e.block,d=e.defaultValue,c=e.values,p=e.groupId,k=e.className,g=l.Children.map(e.children,(function(e){if((0,l.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),b=null!=c?c:g.map((function(e){var t=e.props;return{value:t.value,label:t.label}})),N=(0,o.lx)(b,(function(e,t){return e.value===t.value}));if(N.length>0)throw new Error('Docusaurus error: Duplicate values "'+N.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var f=null===d?d:null!=(t=null!=d?d:null==(n=g.find((function(e){return e.props.default})))?void 0:n.props.value)?t:null==(a=g[0])?void 0:a.props.value;if(null!==f&&!b.some((function(e){return e.value===f})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+f+'" but none of its children has the corresponding value. Available values are: '+b.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var v=u(),h=v.tabGroupChoices,y=v.setTabGroupChoices,j=(0,l.useState)(f),O=j[0],E=j[1],S=[],w=(0,o.o5)().blockElementScrollPositionUntilNextRender;if(null!=p){var x=h[p];null!=x&&x!==O&&b.some((function(e){return e.value===x}))&&E(x)}var T=function(e){var t=e.currentTarget,n=S.indexOf(t),a=b[n].value;a!==O&&(w(t),E(a),null!=p&&y(p,a))},I=function(e){var t,n=null;switch(e.key){case"ArrowRight":var a=S.indexOf(e.currentTarget)+1;n=S[a]||S[0];break;case"ArrowLeft":var l=S.indexOf(e.currentTarget)-1;n=S[l]||S[S.length-1]}null==(t=n)||t.focus()};return l.createElement("div",{className:"tabs-container"},l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,m.Z)("tabs",{"tabs--block":i},k)},b.map((function(e){var t=e.value,n=e.label;return l.createElement("li",{role:"tab",tabIndex:O===t?0:-1,"aria-selected":O===t,className:(0,m.Z)("tabs__item",s,{"tabs__item--active":O===t}),key:t,ref:function(e){return S.push(e)},onKeyDown:I,onFocus:T,onClick:T},null!=n?n:t)}))),r?(0,l.cloneElement)(g.filter((function(e){return e.props.value===O}))[0],{className:"margin-vert--md"}):l.createElement("div",{className:"margin-vert--md"},g.map((function(e,t){return(0,l.cloneElement)(e,{key:t,hidden:e.props.value!==O})}))))}function c(e){var t=(0,r.Z)();return l.createElement(d,(0,a.Z)({key:String(t)},e))}},9443:function(e,t,n){var a=(0,n(7294).createContext)(void 0);t.Z=a},9155:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return m},contentTitle:function(){return s},metadata:function(){return d},toc:function(){return c},default:function(){return k}});var a=n(7462),l=n(3366),r=(n(7294),n(3905)),i=n(6396),u=n(8215),o=["components"],m={sidebar_position:13},s="Sentiment",d={unversionedId:"API/sentiment",id:"API/sentiment",isDocsHomePage:!1,title:"Sentiment",description:"Sentiment Object",source:"@site/docs/API/sentiment.md",sourceDirName:"API",slug:"/API/sentiment",permalink:"/docs/API/sentiment",tags:[],version:"current",sidebarPosition:13,frontMatter:{sidebar_position:13},sidebar:"tutorialSidebar",previous:{title:"Emotions",permalink:"/docs/API/emotions"},next:{title:"ML Emotion",permalink:"/docs/API/ml-emotion"}},c=[{value:"Sentiment Object",id:"sentiment-object",children:[],level:2},{value:"Subsentences Sentiment Object",id:"subsentences-sentiment-object",children:[],level:2},{value:"Sentiment Element Object",id:"sentiment-element-object",children:[],level:2},{value:"Sentiment Values Object",id:"sentiment-values-object",children:[],level:2}],p={toc:c};function k(e){var t=e.components,n=(0,l.Z)(e,o);return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"sentiment"},"Sentiment"),(0,r.kt)("h2",{id:"sentiment-object"},"Sentiment Object"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"KEY"),(0,r.kt)("th",{parentName:"tr",align:null},"TYPE"),(0,r.kt)("th",{parentName:"tr",align:null},"DESCRIPTION"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"subsentences"),(0,r.kt)("td",{parentName:"tr",align:null},"list of Subsentences Sentiment Element Object"),(0,r.kt)("td",{parentName:"tr",align:null},"Source of all sentiments elements divided by subsentences")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"elements"),(0,r.kt)("td",{parentName:"tr",align:null},"list of Sentiment Element Object"),(0,r.kt)("td",{parentName:"tr",align:null},"Specific source for all sentiment elements in the sentence")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"values"),(0,r.kt)("td",{parentName:"tr",align:null},"Sentiment Values Object"),(0,r.kt)("td",{parentName:"tr",align:null},"normalized total values for sentiment")))),(0,r.kt)("p",null,"Sentiment values are available at the following levels of granularity: sentence, subsentence and element."),(0,r.kt)("h2",{id:"subsentences-sentiment-object"},"Subsentences Sentiment Object"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"KEY"),(0,r.kt)("th",{parentName:"tr",align:null},"TYPE"),(0,r.kt)("th",{parentName:"tr",align:null},"DESCRIPTION"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"sentence"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Source of all sentiments elements divided by subsentences")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"start_id"),(0,r.kt)("td",{parentName:"tr",align:null},"int"),(0,r.kt)("td",{parentName:"tr",align:null},"Id of the first token of the subsentence")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"end_id"),(0,r.kt)("td",{parentName:"tr",align:null},"int"),(0,r.kt)("td",{parentName:"tr",align:null},"Id of the last token of the subsentence")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"elements"),(0,r.kt)("td",{parentName:"tr",align:null},"list of Sentiment Element Objets"),(0,r.kt)("td",{parentName:"tr",align:null},"Specific source for all sentiment elements in the subsentence")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"values"),(0,r.kt)("td",{parentName:"tr",align:null},"Sentiment Values Object"),(0,r.kt)("td",{parentName:"tr",align:null},"normalized values for sentiment of subsentence")))),(0,r.kt)("h2",{id:"sentiment-element-object"},"Sentiment Element Object"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"KEY"),(0,r.kt)("th",{parentName:"tr",align:null},"SUBKEY"),(0,r.kt)("th",{parentName:"tr",align:null},"TYPE"),(0,r.kt)("th",{parentName:"tr",align:null},"DESCRIPTION"),(0,r.kt)("th",{parentName:"tr",align:null},"CONSTRAINTS"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"source"),(0,r.kt)("td",{parentName:"tr",align:null},"index"),(0,r.kt)("td",{parentName:"tr",align:null},"int"),(0,r.kt)("td",{parentName:"tr",align:null},"Index of the source word for this element"),(0,r.kt)("td",{parentName:"tr",align:null},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"lemma"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"source's lemma"),(0,r.kt)("td",{parentName:"tr",align:null},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"lemma"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"source's source"),(0,r.kt)("td",{parentName:"tr",align:null},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"subject"),(0,r.kt)("td",{parentName:"tr",align:null},"index"),(0,r.kt)("td",{parentName:"tr",align:null},"int"),(0,r.kt)("td",{parentName:"tr",align:null},"Index of the subject for this element"),(0,r.kt)("td",{parentName:"tr",align:null},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"lemma"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"subject's lemma"),(0,r.kt)("td",{parentName:"tr",align:null},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"source"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"subject's source"),(0,r.kt)("td",{parentName:"tr",align:null},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"target"),(0,r.kt)("td",{parentName:"tr",align:null},"index"),(0,r.kt)("td",{parentName:"tr",align:null},"int"),(0,r.kt)("td",{parentName:"tr",align:null},"Index of the target for this element"),(0,r.kt)("td",{parentName:"tr",align:null},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"lemma"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"target's lemma"),(0,r.kt)("td",{parentName:"tr",align:null},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"source"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"target's source"),(0,r.kt)("td",{parentName:"tr",align:null},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"value"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"float"),(0,r.kt)("td",{parentName:"tr",align:null},"Indice of the sentiment"),(0,r.kt)("td",{parentName:"tr",align:null},"-1 < value < 1")))),(0,r.kt)("p",null,"Subject is the word which represents the subject of the action1 "),(0,r.kt)("p",null,"Source is the word which conveys the sentiment"),(0,r.kt)("p",null,"Target is the word which represents the target of the sentiment"),(0,r.kt)("h2",{id:"sentiment-values-object"},"Sentiment Values Object"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"KEY"),(0,r.kt)("th",{parentName:"tr",align:null},"TYPE"),(0,r.kt)("th",{parentName:"tr",align:null},"DESCRIPTION"),(0,r.kt)("th",{parentName:"tr",align:null},"CONSTRAINTS"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"positive"),(0,r.kt)("td",{parentName:"tr",align:null},"float"),(0,r.kt)("td",{parentName:"tr",align:null},"normalized addition of all positive sentiment values in the sentence"),(0,r.kt)("td",{parentName:"tr",align:null},"0 <= positive < 1")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"negative"),(0,r.kt)("td",{parentName:"tr",align:null},"float"),(0,r.kt)("td",{parentName:"tr",align:null},"normalized addition of all negative sentiment values in the sentence"),(0,r.kt)("td",{parentName:"tr",align:null},"-1 < negative <= 0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"total"),(0,r.kt)("td",{parentName:"tr",align:null},"float"),(0,r.kt)("td",{parentName:"tr",align:null},"positive + negative"),(0,r.kt)("td",{parentName:"tr",align:null},"-1 < total < 1")))),(0,r.kt)("p",null,"Values are calculated either by using sentiment elements objects if available, or by a prediction model at the subsentence level. Values are normalized to stay in the the ","[-1 : 1]"," interval between element, subsentence and sentence level therefore comparisons should be made made with elements of the same depth."),(0,r.kt)(i.Z,{mdxType:"Tabs"},(0,r.kt)(u.Z,{value:"py",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},'{\n    "elements": [\n        {\n            "source": {\n                "index": 1,\n                "lemma": "aimer",\n                "source": "aime"\n            },\n            "subject": {\n                "index": 0,\n                "lemma": "il",\n                "source": "elle"\n            },\n            "target": {\n                "index": 3,\n                "lemma": "chien",\n                "source": "chiens"\n            },\n            "value": 0.46\n        }\n    ],\n    "values": {\n        "negative": 0,\n        "positive": 0.17,\n        "total": 0.17\n    },\n    "subsentences": {\n        "sentence": "elle aime les chiens",\n        "start_id": 0,\n        "end_id": 3,\n        "elements": [\n            {\n                "source": {\n                    "index": 1,\n                    "lemma": "aimer",\n                    "source": "aime"\n                },\n                "subject": {\n                    "index": 0,\n                    "lemma": "il",\n                    "source": "elle"\n                },\n                "target": {\n                    "index": 3,\n                    "lemma": "chien",\n                    "source": "chiens"\n                },\n                "value": 0.27\n            }\n        ],\n        "values": {\n                "negative": 0,\n                "positive": 0.17,\n                "total": 0.17\n        }\n    }\n}\n'))),(0,r.kt)(u.Z,{value:"json",label:"JSON",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "elements": [\n        {\n            "source": {\n                "index": 1,\n                "lemma": "aimer",\n                "source": "aime"\n            },\n            "subject": {\n                "index": 0,\n                "lemma": "il",\n                "source": "elle"\n            },\n            "target": {\n                "index": 3,\n                "lemma": "chien",\n                "source": "chiens"\n            },\n            "value": 0.46\n        }\n    ],\n    "values": {\n        "negative": 0,\n        "positive": 0.17,\n        "total": 0.17\n    },\n    "subsentences": {\n        "sentence": "elle aime les chiens",\n        "start_id": 0,\n        "end_id": 3,\n        "elements": [\n            {\n                "source": {\n                    "index": 1,\n                    "lemma": "aimer",\n                    "source": "aime"\n                },\n                "subject": {\n                    "index": 0,\n                    "lemma": "il",\n                    "source": "elle"\n                },\n                "target": {\n                    "index": 3,\n                    "lemma": "chien",\n                    "source": "chiens"\n                },\n                "value": 0.27\n            }\n        ],\n        "values": {\n                "negative": 0,\n                "positive": 0.17,\n                "total": 0.17\n        }\n    }\n}\n')))))}k.isMDXComponent=!0}}]);