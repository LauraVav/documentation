"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9885],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),m=p(n),d=i,y=m["".concat(l,".").concat(d)]||m[d]||c[d]||r;return n?a.createElement(y,s(s({ref:t},u),{},{components:n})):a.createElement(y,s({ref:t},u))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,s=new Array(r);s[0]=m;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:i,s[1]=o;for(var p=2;p<r;p++)s[p]=n[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8713:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return l},metadata:function(){return p},toc:function(){return u},default:function(){return m}});var a=n(7462),i=n(3366),r=(n(7294),n(3905)),s=["components"],o={sidebar_position:8},l="Sentiment Analysis",p={unversionedId:"Tutorials/API/sentiment-analysis",id:"Tutorials/API/sentiment-analysis",isDocsHomePage:!1,title:"Sentiment Analysis",description:"Video",source:"@site/docs/Tutorials/API/sentiment-analysis.md",sourceDirName:"Tutorials/API",slug:"/Tutorials/API/sentiment-analysis",permalink:"/docs/Tutorials/API/sentiment-analysis",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"Emotion Analysis",permalink:"/docs/Tutorials/API/emotion-analysis"},next:{title:"Intent Detection",permalink:"/docs/Tutorials/API/intent-detection"}},u=[{value:"Video",id:"video",children:[],level:2},{value:"What is sentimental analysis?",id:"what-is-sentimental-analysis",children:[],level:2},{value:"Importing the library &amp; adding your personal API key",id:"importing-the-library--adding-your-personal-api-key",children:[],level:2},{value:"Adding your document",id:"adding-your-document",children:[],level:2},{value:"Analyzing phrases",id:"analyzing-phrases",children:[],level:2},{value:"<strong>Analyzing document sentiments</strong>",id:"analyzing-document-sentiments",children:[],level:2},{value:"<strong>Analyzing the sentiments of words</strong>",id:"analyzing-the-sentiments-of-words",children:[],level:2},{value:"Saving results",id:"saving-results",children:[],level:2},{value:"Code set",id:"code-set",children:[],level:2}],c={toc:u};function m(e){var t=e.components,o=(0,i.Z)(e,s);return(0,r.kt)("wrapper",(0,a.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"sentiment-analysis"},"Sentiment Analysis"),(0,r.kt)("h2",{id:"video"},"Video"),(0,r.kt)("iframe",{width:"560",height:"315",src:"https://www.youtube.com/embed/FGXUeYIPtDQ",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:!0}),(0,r.kt)("h2",{id:"what-is-sentimental-analysis"},"What is sentimental analysis?"),(0,r.kt)("p",null,"Sentimental analysis consists in identifying whether a text has a negative, positive or neutral connotation. Lettria analyzes the feelings at the subsentence level, which enables you to have a precise analysis of the data."),(0,r.kt)("p",null,"In order to extract sentiments you have two options:"),(0,r.kt)("p",null,"Use the sentiment' properties with the NLP object, or, use the lettria.Sentiment module which offers more advanced features."),(0,r.kt)("p",null,"We will be taking a look at the second option."),(0,r.kt)("h2",{id:"importing-the-library--adding-your-personal-api-key"},"Importing the library & adding your personal API key"),(0,r.kt)("p",null,"After you've installed the Lettria package on Python you'll need to import the library."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"import lettria\n")),(0,r.kt)("p",null,"To use sentiment analysis you will need to import the sentiment library."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"from lettria import Sentiment\n")),(0,r.kt)("p",null,"Next you are going to need to include your personal API key which can be found"),(0,r.kt)("p",null,"via the Lettria platform in the dashboard."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"api_key = 'your personal API key'\nnlp = lettria.NLP(api_key)\n")),(0,r.kt)("h2",{id:"adding-your-document"},"Adding your document"),(0,r.kt)("p",null,"Now you will need to open your saved document. Be sure to add the name of"),(0,r.kt)("p",null,"\u2018your file\u2019 since it may differ from the name of my example file."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'with open("example.txt", "r") as f:\n    example_data = f.readlines()\n')),(0,r.kt)("p",null,"Next I am going to add the document to the NLP."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"nlp.add_document(example_data)\n")),(0,r.kt)("p",null,"Next, add the sentiment from the NLP."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"sentiment = Sentiment(nlp)\n")),(0,r.kt)("h2",{id:"analyzing-phrases"},"Analyzing phrases"),(0,r.kt)("p",null,"To extract the positive sentences from your docuemnt use the following command."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"print('\\nPositive Sentences')\npositive_sentences = sentiment.filter_polarity('positive', granularity='subsentence')\nfor p in positive_sentences:\n    print(p.str, p.sentiment)\n")),(0,r.kt)("p",null,"In the results you can see that my positive sentences have been extracted and you\u2019ll also be able to see the granularity values. I can do the same for negative phrases"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"print('\\nNegative Sentences')\nnegative_sentences = sentiment.filter_polarity('negative', granularity='subsentence')\nfor n in negative_sentences:\n    print(n.str, n.sentiment)\n")),(0,r.kt)("p",null,"This enables me to compare the positive and negative sentences. This could be useful for analyzing customer feedback via reviews or comments."),(0,r.kt)("h2",{id:"analyzing-document-sentiments"},(0,r.kt)("strong",{parentName:"h2"},"Analyzing document sentiments")),(0,r.kt)("p",null,"If you are looking to extract the polarity you can use get_sentiment which allows to obtain the feelings at the desired level (global, document, sentence or subsentence)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"doc_sentiments = sentiment.get_sentiment(level='document')\nfor d in doc_sentiments:\n    print(d)\n")),(0,r.kt)("p",null,"For each element at the document level, which happens to be an email in my case, we obtain the score of each polarity as well as the total score."),(0,r.kt)("h2",{id:"analyzing-the-sentiments-of-words"},(0,r.kt)("strong",{parentName:"h2"},"Analyzing the sentiments of words")),(0,r.kt)("p",null,"We can push the analysis further by not limiting our analysis to just sentences. By associating the words that make up a sentence or sub-sentence with the sentimental value of the latter, we can build a dictionary with the average feeling associated with the use of a word."),(0,r.kt)("p",null,"Let's try to extract the sentiments from the common nouns, using the lemmas for more reliability."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"sentiment.word_sentiment(lemma=True, filter_pos = ['N'])\n")),(0,r.kt)("p",null,"Most of the words being positive the words are generally positive, but you will also see the negative words indicated by their values less than one."),(0,r.kt)("h2",{id:"saving-results"},"Saving results"),(0,r.kt)("p",null,"In order to save your results you can use the following command."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"nlp.save_results(\u2018example_results')\n")),(0,r.kt)("p",null,"And a json file with you results that can be used for further analysis will be saved."),(0,r.kt)("h2",{id:"code-set"},"Code set"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"import lettria\nfrom lettria import Sentiment\n\napi_key = 'your personal API key'\nnlp = lettria.NLP(api_key)\n\nwith open(\"example.txt\", \"r\") as f:\n    example_data = f.readlines()\n\nnlp.add_document(example_data)\n\nsentiment = Sentiment(nlp)\n\nprint('\\nPositive Sentences')\npositive_sentences = sentiment.filter_polarity('positive', granularity='subsentence')\nfor p in positive_sentences:\n    print(p.str, p.sentiment)\n\nprint('\\nNegative Sentences')\nnegative_sentences = sentiment.filter_polarity('negative', granularity='subsentence')\nfor n in negative_sentences:\n    print(n.str, n.sentiment)\n\ndoc_sentiments = sentiment.get_sentiment(level='document')\nfor d in doc_sentiments:\n    print(d)\n\nsentiment.word_sentiment(lemma=True, filter_pos = ['N'])\n\nnlp.save_results(\u2018example_results')\n")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://app.lettria.com/signup"},(0,r.kt)("img",{alt:"register-sticky",src:n(4209).Z}))))}m.isMDXComponent=!0},4209:function(e,t,n){t.Z=n.p+"assets/images/register-sticky-0bf1e35cb49b633a37ddd712c2cfde47.png"}}]);