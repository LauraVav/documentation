"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6496],{3905:function(t,e,a){a.d(e,{Zo:function(){return o},kt:function(){return N}});var n=a(7294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function d(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},l=Object.keys(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var p=n.createContext({}),m=function(t){var e=n.useContext(p),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},o=function(t){var e=m(t.components);return n.createElement(p.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},k=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,l=t.originalType,p=t.parentName,o=d(t,["components","mdxType","originalType","parentName"]),k=m(a),N=r,g=k["".concat(p,".").concat(N)]||k[N]||u[N]||l;return a?n.createElement(g,i(i({ref:e},o),{},{components:a})):n.createElement(g,i({ref:e},o))}));function N(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=a.length,i=new Array(l);i[0]=k;var d={};for(var p in e)hasOwnProperty.call(e,p)&&(d[p]=e[p]);d.originalType=t,d.mdxType="string"==typeof t?t:r,i[1]=d;for(var m=2;m<l;m++)i[m]=a[m];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}k.displayName="MDXCreateElement"},2122:function(t,e,a){a.r(e),a.d(e,{frontMatter:function(){return d},contentTitle:function(){return p},metadata:function(){return m},toc:function(){return o},default:function(){return k}});var n=a(7462),r=a(3366),l=(a(7294),a(3905)),i=["components"],d={sidebar_position:4},p="Detail",m={unversionedId:"API/detail",id:"version-2.0/API/detail",isDocsHomePage:!1,title:"Detail",description:"The API output is divided into three levels. The third level of return is the Detail level. Within the Detail Object you will find the following return below.",source:"@site/versioned_docs/version-2.0/API/detail.md",sourceDirName:"API",slug:"/API/detail",permalink:"/documentation/docs/API/detail",tags:[],version:"2.0",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"version-2.0/tutorialSidebar",previous:{title:"Sentence",permalink:"/documentation/docs/API/sentence"},next:{title:"Tags",permalink:"/documentation/docs/API/Glossary/tags"}},o=[{value:"Detail Object",id:"detail-object",children:[],level:2},{value:"Detail Format",id:"detail-format",children:[],level:2},{value:"Lemma",id:"lemma",children:[],level:2},{value:"source_pure",id:"source_pure",children:[],level:2},{value:"Source",id:"source",children:[],level:2},{value:"Index",id:"index",children:[],level:2},{value:"Tag",id:"tag",children:[{value:"POS Tagger Object",id:"pos-tagger-object",children:[],level:3},{value:"POS Tags",id:"pos-tags",children:[],level:3}],level:2},{value:"Dep",id:"dep",children:[{value:"Dependency Object",id:"dependency-object",children:[],level:3},{value:"Dependency Tags",id:"dependency-tags",children:[],level:3}],level:2},{value:"Ref",id:"ref",children:[],level:2},{value:"Meaning",id:"meaning",children:[],level:2},{value:"Lemmatizer",id:"lemmatizer",children:[],level:2},{value:"type_entity",id:"type_entity",children:[],level:2},{value:"Value",id:"value",children:[],level:2}],u={toc:o};function k(t){var e=t.components,a=(0,r.Z)(t,i);return(0,l.kt)("wrapper",(0,n.Z)({},u,a,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"detail"},"Detail"),(0,l.kt)("p",null,"The API output is divided into three levels. The third level of return is the Detail level. Within the Detail Object you will find the following return below."),(0,l.kt)("p",null,"Check out the Sentence and Details level to see the full list of objects. "),(0,l.kt)("h2",{id:"detail-object"},"Detail Object"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"center"},"Key"),(0,l.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"center"},"Description"),(0,l.kt)("th",{parentName:"tr",align:"center"},"Contraints"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},(0,l.kt)("a",{parentName:"td",href:"https://www.lettria.com/documentation/docs/API/detail#lemma"},"lemma")),(0,l.kt)("td",{parentName:"tr",align:"center"},"string"),(0,l.kt)("td",{parentName:"tr",align:"center"},"lemma"),(0,l.kt)("td",{parentName:"tr",align:"center"})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},(0,l.kt)("a",{parentName:"td",href:"https://www.lettria.com/documentation/docs/API/detail#source_pure"},"source_pure")),(0,l.kt)("td",{parentName:"tr",align:"center"},"string"),(0,l.kt)("td",{parentName:"tr",align:"center"},"the TRUE source"),(0,l.kt)("td",{parentName:"tr",align:"center"})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},(0,l.kt)("a",{parentName:"td",href:"https://www.lettria.com/documentation/docs/API/detail#source"},"source")),(0,l.kt)("td",{parentName:"tr",align:"center"},"string"),(0,l.kt)("td",{parentName:"tr",align:"center"},"the work source"),(0,l.kt)("td",{parentName:"tr",align:"center"})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},(0,l.kt)("a",{parentName:"td",href:"https://www.lettria.com/documentation/docs/API/detail#index"},"index")),(0,l.kt)("td",{parentName:"tr",align:"center"},"integer"),(0,l.kt)("td",{parentName:"tr",align:"center"},"absolute token index at input"),(0,l.kt)("td",{parentName:"tr",align:"center"},"index >= 0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},(0,l.kt)("a",{parentName:"td",href:"https://www.lettria.com/documentation/docs/API/detail#tag"},"tag")),(0,l.kt)("td",{parentName:"tr",align:"center"},"string"),(0,l.kt)("td",{parentName:"tr",align:"center"},(0,l.kt)("a",{parentName:"td",href:"https://www.lettria.com/documentation/docs/API/detail#pos-tagger-object"},"pos tag")),(0,l.kt)("td",{parentName:"tr",align:"center"})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},(0,l.kt)("a",{parentName:"td",href:"https://www.lettria.com/documentation/docs/API/detail#dep"},"dep")),(0,l.kt)("td",{parentName:"tr",align:"center"},"string"),(0,l.kt)("td",{parentName:"tr",align:"center"},"see list of ",(0,l.kt)("a",{parentName:"td",href:"https://www.lettria.com/documentation/docs/API/detail#dependency-tags"},"dependency tags")),(0,l.kt)("td",{parentName:"tr",align:"center"})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},(0,l.kt)("a",{parentName:"td",href:"https://www.lettria.com/documentation/docs/API/detail#ref"},"ref")),(0,l.kt)("td",{parentName:"tr",align:"center"},"integer"),(0,l.kt)("td",{parentName:"tr",align:"center"},"index of the parent dependence"),(0,l.kt)("td",{parentName:"tr",align:"center"},"1 for root, else >= 0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},(0,l.kt)("a",{parentName:"td",href:"https://www.lettria.com/documentation/docs/API/detail#meaning"},"meaning")),(0,l.kt)("td",{parentName:"tr",align:"center"},"list of ",(0,l.kt)("a",{parentName:"td",href:"https://www.lettria.com/documentation/docs/API/Glossary/categories/"},"Category Objects")),(0,l.kt)("td",{parentName:"tr",align:"center"},"Known meanings for the item"),(0,l.kt)("td",{parentName:"tr",align:"center"},"Can be empty")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},(0,l.kt)("a",{parentName:"td",href:"https://www.lettria.com/documentation/docs/API/detail#lemmatizer"},"lemmatizer")),(0,l.kt)("td",{parentName:"tr",align:"center"},(0,l.kt)("a",{parentName:"td",href:"https://www.lettria.com/documentation/docs/API/detail#lemmatizer"},"Lemmatizer Object")),(0,l.kt)("td",{parentName:"tr",align:"center"},"lemmatizer details"),(0,l.kt)("td",{parentName:"tr",align:"center"})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},(0,l.kt)("a",{parentName:"td",href:"https://www.lettria.com/documentation/docs/API/detail#type_entity"},"type_entity")),(0,l.kt)("td",{parentName:"tr",align:"center"},(0,l.kt)("a",{parentName:"td",href:"https://www.lettria.com/documentation/docs/API/Glossary/entities"},"entity types")),(0,l.kt)("td",{parentName:"tr",align:"center"},"entity type or null"),(0,l.kt)("td",{parentName:"tr",align:"center"})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"center"},(0,l.kt)("a",{parentName:"td",href:"https://www.lettria.com/documentation/docs/API/detail#value"},"value")),(0,l.kt)("td",{parentName:"tr",align:"center"},"entities"),(0,l.kt)("td",{parentName:"tr",align:"center"},"Return entity or other"),(0,l.kt)("td",{parentName:"tr",align:"center"})))),(0,l.kt)("h2",{id:"detail-format"},"Detail Format"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'\ninput: \'The package was delivered on Tuesday.\'\n\noutput :\n\u2018detail\u2019\xa0: [{\n            \u2018lemma\u2019\xa0: "the",\n            \u2018source_pure\u2019\xa0: "The"\n            \'source\': "The"\n            \u2018index\u2019\xa0: [0, 3]\n            \u2018tag\u2019\xa0: "D"            \u2018dep\u2019\xa0: "det",\n            \u2018ref\u2019\xa0: 1,\n            \u2018meaning\u2019\xa0: []\n            \u2018lemmatizer\u2019\xa0: {"possessing": -1, "mode": "define", "gender": {"female": false, "plural": false},\n            \u2018type_entity\u2019\xa0: null\n            \u2018value\u2019\xa0: {} \n             },\n           {...}, {\u2026}, \u2026.]\n')),(0,l.kt)("h2",{id:"lemma"},"Lemma"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"KEY"),(0,l.kt)("th",{parentName:"tr",align:null},"TYPE"),(0,l.kt)("th",{parentName:"tr",align:null},"DESCRIPTION"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"lemma"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"lemmatized version of the source")))),(0,l.kt)("h2",{id:"source_pure"},"source_pure"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Key"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"source_pure"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"the TRUE source")))),(0,l.kt)("h2",{id:"source"},"Source"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Key"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"source"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"the work source")))),(0,l.kt)("h2",{id:"index"},"Index"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Key"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Constraints"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"index"),(0,l.kt)("td",{parentName:"tr",align:null},"int"),(0,l.kt)("td",{parentName:"tr",align:null},"base index of the token, links the APIs together"),(0,l.kt)("td",{parentName:"tr",align:null},"index >= 0")))),(0,l.kt)("h2",{id:"tag"},"Tag"),(0,l.kt)("h3",{id:"pos-tagger-object"},"POS Tagger Object"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"INDEX"),(0,l.kt)("th",{parentName:"tr",align:null},"TYPE"),(0,l.kt)("th",{parentName:"tr",align:null},"DESCRIPTION"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"Word token")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"See list of possible tags")))),(0,l.kt)("h3",{id:"pos-tags"},"POS Tags"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"VALUE"),(0,l.kt)("th",{parentName:"tr",align:null},"DESCRIPTION"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"C"),(0,l.kt)("td",{parentName:"tr",align:null},"conjunction")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"CC"),(0,l.kt)("td",{parentName:"tr",align:null},"co-ordinating conjunction")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"CD"),(0,l.kt)("td",{parentName:"tr",align:null},"number")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"CLO"),(0,l.kt)("td",{parentName:"tr",align:null},"pronoun object")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"CLS"),(0,l.kt)("td",{parentName:"tr",align:null},"pronoun")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"D"),(0,l.kt)("td",{parentName:"tr",align:null},"determiner")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"JJ"),(0,l.kt)("td",{parentName:"tr",align:null},"adjective")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"N"),(0,l.kt)("td",{parentName:"tr",align:null},"common noun")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"NP"),(0,l.kt)("td",{parentName:"tr",align:null},"proper noun")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"PUNCT"),(0,l.kt)("td",{parentName:"tr",align:null},"punctuation")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"P"),(0,l.kt)("td",{parentName:"tr",align:null},"preposition")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"PD"),(0,l.kt)("td",{parentName:"tr",align:null},"pronom define")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"PROREL"),(0,l.kt)("td",{parentName:"tr",align:null},"pronom relative")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"RB"),(0,l.kt)("td",{parentName:"tr",align:null},"adverb")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"RB_WH"),(0,l.kt)("td",{parentName:"tr",align:null},"adverb question")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"SYM"),(0,l.kt)("td",{parentName:"tr",align:null},"symbols")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"UH"),(0,l.kt)("td",{parentName:"tr",align:null},"interjection")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"V"),(0,l.kt)("td",{parentName:"tr",align:null},"verb")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"VINF"),(0,l.kt)("td",{parentName:"tr",align:null},"infinitive verb")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"VP"),(0,l.kt)("td",{parentName:"tr",align:null},"verb participe past")))),(0,l.kt)("h2",{id:"dep"},"Dep"),(0,l.kt)("h3",{id:"dependency-object"},"Dependency Object"),(0,l.kt)("p",null,"Dependence objects combine the results from the dependency parser with the understanding from the NLU api."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"KEY"),(0,l.kt)("th",{parentName:"tr",align:null},"TYPE"),(0,l.kt)("th",{parentName:"tr",align:null},"DESCRIPTION"),(0,l.kt)("th",{parentName:"tr",align:null},"CONSTRAINTS"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"dep"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"see list of dependency tags"),(0,l.kt)("td",{parentName:"tr",align:null},"-")))),(0,l.kt)("h3",{id:"dependency-tags"},"Dependency Tags"),(0,l.kt)("p",null,"We use the ",(0,l.kt)("a",{parentName:"p",href:"https://universaldependencies.org/en/dep/index.html"},"universal dependencies")," for our dependency parser."),(0,l.kt)("h2",{id:"ref"},"Ref"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"KEY"),(0,l.kt)("th",{parentName:"tr",align:null},"TYPE"),(0,l.kt)("th",{parentName:"tr",align:null},"DESCRIPTION"),(0,l.kt)("th",{parentName:"tr",align:null},"CONSTRAINTS"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ref"),(0,l.kt)("td",{parentName:"tr",align:null},"integer"),(0,l.kt)("td",{parentName:"tr",align:null},"index of the parent dependence"),(0,l.kt)("td",{parentName:"tr",align:null},"1 for root, else >= 0")))),(0,l.kt)("h2",{id:"meaning"},"Meaning"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"KEY"),(0,l.kt)("th",{parentName:"tr",align:null},"TYPE"),(0,l.kt)("th",{parentName:"tr",align:null},"DESCRIPTION"),(0,l.kt)("th",{parentName:"tr",align:null},"CONSTRAINTS"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"meaning"),(0,l.kt)("td",{parentName:"tr",align:null},"list of ",(0,l.kt)("a",{parentName:"td",href:"https://www.lettria.com/documentation/docs/API/Glossary/categories"},"Category Objects")),(0,l.kt)("td",{parentName:"tr",align:null},"Known meanings for the item"),(0,l.kt)("td",{parentName:"tr",align:null},"Can be empty.")))),(0,l.kt)("h2",{id:"lemmatizer"},"Lemmatizer"),(0,l.kt)("p",null,"The content of the lemmatizer object is different for each tag. The table bellow references all the keys that are available, and lists the tags that will return them (see POS Tagger and list of tags)."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"KEY"),(0,l.kt)("th",{parentName:"tr",align:null},"TYPE"),(0,l.kt)("th",{parentName:"tr",align:null},"DESCRIPTION"),(0,l.kt)("th",{parentName:"tr",align:null},"CONSTRAINTS"),(0,l.kt)("th",{parentName:"tr",align:null},"TAGS"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"conjugate"),(0,l.kt)("td",{parentName:"tr",align:null},"list of Conjugate Objects"),(0,l.kt)("td",{parentName:"tr",align:null},"List possible conjugations"),(0,l.kt)("td",{parentName:"tr",align:null},"see Conjugations"),(0,l.kt)("td",{parentName:"tr",align:null},"V")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"confidence"),(0,l.kt)("td",{parentName:"tr",align:null},"float"),(0,l.kt)("td",{parentName:"tr",align:null},"level of confidence in the results (higher is better)"),(0,l.kt)("td",{parentName:"tr",align:null},"0 <= confidence <= 1"),(0,l.kt)("td",{parentName:"tr",align:null},"(all)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"gender"),(0,l.kt)("td",{parentName:"tr",align:null},"Gender Object"),(0,l.kt)("td",{parentName:"tr",align:null},"describes the gender and plurality"),(0,l.kt)("td",{parentName:"tr",align:null},"-"),(0,l.kt)("td",{parentName:"tr",align:null},"VP, JJ, N, D, PD")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"lemma"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"lemmatized version of the source"),(0,l.kt)("td",{parentName:"tr",align:null},"-"),(0,l.kt)("td",{parentName:"tr",align:null},"C, CC, CLO, CLS, D, JJ, N, NP, PUNCT, P, PD, PROREL, RB, RB_WH, SYM, UH")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"infinit"),(0,l.kt)("td",{parentName:"tr",align:null},"list of string"),(0,l.kt)("td",{parentName:"tr",align:null},"list of possible verb infinitives"),(0,l.kt)("td",{parentName:"tr",align:null},"-"),(0,l.kt)("td",{parentName:"tr",align:null},"V, VP")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"float"),(0,l.kt)("td",{parentName:"tr",align:null},"value"),(0,l.kt)("td",{parentName:"tr",align:null},"-"),(0,l.kt)("td",{parentName:"tr",align:null},"CD")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"mode"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"-"),(0,l.kt)("td",{parentName:"tr",align:null},"-"),(0,l.kt)("td",{parentName:"tr",align:null},"D, PD")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"possessing"),(0,l.kt)("td",{parentName:"tr",align:null},"int"),(0,l.kt)("td",{parentName:"tr",align:null},"see Possessive determiners"),(0,l.kt)("td",{parentName:"tr",align:null},"-"),(0,l.kt)("td",{parentName:"tr",align:null},"D, PD")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"pronom"),(0,l.kt)("td",{parentName:"tr",align:null},"int"),(0,l.kt)("td",{parentName:"tr",align:null},"see Pronouns"),(0,l.kt)("td",{parentName:"tr",align:null},"-"),(0,l.kt)("td",{parentName:"tr",align:null},"CLS")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"designation"),(0,l.kt)("td",{parentName:"tr",align:null},"list of string"),(0,l.kt)("td",{parentName:"tr",align:null},"see Categories"),(0,l.kt)("td",{parentName:"tr",align:null},"-"),(0,l.kt)("td",{parentName:"tr",align:null},"CLO")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"category"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"see Adverb Categories"),(0,l.kt)("td",{parentName:"tr",align:null},"-"),(0,l.kt)("td",{parentName:"tr",align:null},"RB")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"source"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"-"),(0,l.kt)("td",{parentName:"tr",align:null},"-"),(0,l.kt)("td",{parentName:"tr",align:null},"RB, P")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"sens"),(0,l.kt)("td",{parentName:"tr",align:null},"list of Preposition sens object"),(0,l.kt)("td",{parentName:"tr",align:null},"-"),(0,l.kt)("td",{parentName:"tr",align:null},"-"),(0,l.kt)("td",{parentName:"tr",align:null},"P")))),(0,l.kt)("h2",{id:"type_entity"},"type_entity"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"KEY"),(0,l.kt)("th",{parentName:"tr",align:null},"TYPE"),(0,l.kt)("th",{parentName:"tr",align:null},"DESCRIPTION"),(0,l.kt)("th",{parentName:"tr",align:null},"CONSTRAINTS"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"type_entity"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"Describes the type of entity found"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://www.lettria.com/documentation/docs/API/Glossary/tags"},"For proper nouns"),", can either be LOCATION or PERSON. For other entities, see ",(0,l.kt)("a",{parentName:"td",href:"https://www.lettria.com/documentation/docs/API/Glossary/entities"},"Entity types"))))),(0,l.kt)("h2",{id:"value"},"Value"),(0,l.kt)("p",null,"A value object can either be a numeric value for some adjectives, an entity value for entities, or a 'null' value for names."))}k.isMDXComponent=!0}}]);