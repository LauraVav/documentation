"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7022],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=o.createContext({}),d=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=d(e.components);return o.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=d(n),m=r,h=u["".concat(l,".").concat(m)]||u[m]||p[m]||a;return n?o.createElement(h,i(i({ref:t},c),{},{components:n})):o.createElement(h,i({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var d=2;d<a;d++)i[d]=n[d];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},3815:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return d},toc:function(){return c},default:function(){return u}});var o=n(7462),r=n(3366),a=(n(7294),n(3905)),i=["components"],s={sidebar_position:6},l="NER",d={unversionedId:"Tool guides/ner",id:"version-1.0/Tool guides/ner",isDocsHomePage:!1,title:"NER",description:"What is Named Entity Recognition?",source:"@site/versioned_docs/version-1.0/Tool guides/ner.md",sourceDirName:"Tool guides",slug:"/Tool guides/ner",permalink:"/documentation/docs/1.0/Tool guides/ner",tags:[],version:"1.0",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"version-1.0/tutorialSidebar",previous:{title:"NLU",permalink:"/documentation/docs/1.0/Tool guides/nlu"},next:{title:"Sentiment Analysis",permalink:"/documentation/docs/1.0/Tool guides/sentiment-analysis"}},c=[{value:"What is Named Entity Recognition?",id:"what-is-named-entity-recognition",children:[],level:2},{value:"What does it do? How does it work?",id:"what-does-it-do-how-does-it-work",children:[],level:2},{value:"A LITTLE BIT OF GEEK CULTURE",id:"a-little-bit-of-geek-culture",children:[],level:2},{value:"How does it work? What comes before and after?",id:"how-does-it-work-what-comes-before-and-after",children:[],level:2},{value:"What\u2019s the Lettria approach?",id:"whats-the-lettria-approach",children:[],level:2}],p={toc:c};function u(e){var t=e.components,n=(0,r.Z)(e,i);return(0,a.kt)("wrapper",(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"ner"},"NER"),(0,a.kt)("h2",{id:"what-is-named-entity-recognition"},"What is Named Entity Recognition?"),(0,a.kt)("p",null,"A detector of named entities (Named Entity Recognition or NER) is an analysis tool based on dedicated knowledge bases. Its aim is to identify the key semantic elements of a sentence. It allows us to ",(0,a.kt)("strong",{parentName:"p"},"comprehend the general knowledge present in a text.")),(0,a.kt)("h2",{id:"what-does-it-do-how-does-it-work"},"What does it do? How does it work?"),(0,a.kt)("p",null,"Named Entity Recognition is an investigative process that allows us to identify the most relevant semantic units because they are anchored in reality: person, place, date, purpose...all the tags identify not just actors but also landmarks. They are essential in the process of reading and understanding a text."),(0,a.kt)("p",null,"Named Entity Recognition is based on a set of rules or on Machine learning based on a manually-labelled corpus. In NLP, this detection is detailed work. Initially, it was limited to the most important models or patterns of a text. The detector had to identify the 5 proper nouns or their equivalents (people, place, purpose, company\xa0 or organization, date) ",(0,a.kt)("strong",{parentName:"p"},"to understand the who and the what of the text"),". It\u2019s a little gem of computational linguistics."),(0,a.kt)("p",null,"A named entity must:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"designate a reality perceptible in the world"),(0,a.kt)("li",{parentName:"ul"},"represent an element that is essential for the understanding of the text")),(0,a.kt)("h2",{id:"a-little-bit-of-geek-culture"},"A LITTLE BIT OF GEEK CULTURE"),(0,a.kt)("p",null,'Often used in research, NER depends on semantics and understanding. To understand a text, we split it up in order to find relevant elements. We then assign a type to the detected elements: it\u2019s an ontological effort. NER is closely related to the work of the tokenizer, and notably to the step of "re-tokenization" that assembles multiple tokens that carry the same meaning.'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example:")),(0,a.kt)("p",null,'In the sentence, "I drive at 100 m/hour,\u201d the following tokens are clearly distinct:'),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"[ 100 ] [ m ] [ / ] [ hour ] \n")),(0,a.kt)("p",null,"\u201cRe-tokenization\u201d allows us to group them creating the entity \u201cspeed,\u201d which corresponds to the underlying concept of speed in this sentence."),(0,a.kt)("h2",{id:"how-does-it-work-what-comes-before-and-after"},"How does it work? What comes before and after?"),(0,a.kt)("p",null,'In reality, one named entity can take different forms. The elements "30 april 2019", "30/04/2019" and "2019/04/30" all refer to the same date. Only proper names have a single meaning, given their unique reference.'),(0,a.kt)("p",null,'We sometimes must resort to embedding in order to treat constructions composed of multiple elements. For example, "the president of Renault-Nissan" contains several entities. For this, we have two available methods. The first is ',(0,a.kt)("strong",{parentName:"p"},"corpus linguistics"),", in relation to the targets that interest us. We can derive, for example, defined descriptions (locutions that describe an individual or a singular object, like \u201cthe first monkey to go to space,\u201d or \u201cthe 9th American president\u201d). The second method is ",(0,a.kt)("strong",{parentName:"p"},"pattern detection")," via sufficiently generic regular expressions (regex)."),(0,a.kt)("p",null,"This double methodology makes NER a meticulous process that takes place at the end of the chain, once each word of the text has been isolated and labelled."),(0,a.kt)("h2",{id:"whats-the-lettria-approach"},"What\u2019s the Lettria approach?"),(0,a.kt)("p",null,"At Lettria, we\u2019ve chosen to ",(0,a.kt)("strong",{parentName:"p"},"combine machine learning with regular expressions"),". This double approach allows us to gain precision and to facilitate the maintenance of our models, all while increasing the number of entities generated by our API. First, we apply an initial series of regular expressions to ",(0,a.kt)("strong",{parentName:"p"},"isolate iconic text patterns")," (dates, numbers, etc.); this is entity recognition. Then we do the more generic work (hyperonyms) which applies a semantic filter to the text to ",(0,a.kt)("strong",{parentName:"p"},"encompass all patterns"),"."),(0,a.kt)("p",null,"So the types of entities are perfectly understood. For example, the entity 30.04.2019 is broken down into 30 (day from 01 to 31) + april (month of the year) + 2019 (year)."),(0,a.kt)("p",null,"Today, we can detect ",(0,a.kt)("strong",{parentName:"p"},"40 numerical and named entities,")," including telephone numbers, volumes, time intervals, sums of money, measurements and more. ",(0,a.kt)("a",{parentName:"p",href:"https://doc.lettria.com/#entities"},"Find our exhaustive list of covered entities here"),"."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example:")),(0,a.kt)("p",null,"In the sentence, \u201cHe comes to the house from Tuesday to Friday,\u201d Lettria\u2019s tools detect a series of tokens ","[from Tuesday to Friday]"," which form the \u201ctime interval\u201d entity."),(0,a.kt)("p",null,"*",(0,a.kt)("em",{parentName:"p"},"Key takeaways")),(0,a.kt)("p",null,"The work of Named Entity Recognition comes down to labelling. By labelling markers or expressions of text that have a real and unique referential in the world, we manage to isolate the most useful elements from a semantic point of view."),(0,a.kt)("p",null,"Each named entity refers to an independent label that constitutes a landmark or anchor in the text. Essential for the extraction of information, named entities are completely dependent on a language and its culture."),(0,a.kt)("p",null,"At Lettria, our NER stays agile because it\u2019s not based on fixed learnings from computational linguistics, but also on the processing of regular expressions."))}u.isMDXComponent=!0}}]);