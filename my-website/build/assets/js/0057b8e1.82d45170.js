"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3813],{3905:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return y}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),p=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=p(e.components);return r.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},c=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=p(t),y=a,m=c["".concat(s,".").concat(y)]||c[y]||u[y]||o;return t?r.createElement(m,i(i({ref:n},d),{},{components:t})):r.createElement(m,i({ref:n},d))}));function y(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=c;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=t[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}c.displayName="MDXCreateElement"},3024:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return d},default:function(){return c}});var r=t(7462),a=t(3366),o=(t(7294),t(3905)),i=["components"],l={sidebar_position:6},s="Dependency Parser",p={unversionedId:"Tutorials/dependency-parser",id:"Tutorials/dependency-parser",isDocsHomePage:!1,title:"Dependency Parser",description:"Video",source:"@site/docs/Tutorials/dependency-parser.md",sourceDirName:"Tutorials",slug:"/Tutorials/dependency-parser",permalink:"/docs/Tutorials/dependency-parser",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Tokenizer",permalink:"/docs/Tutorials/tokenizer"},next:{title:"Emotion Analysis",permalink:"/docs/Tutorials/emotion-analysis"}},d=[{value:"Video",id:"video",children:[],level:2},{value:"Importing the library &amp; adding your personal API key",id:"importing-the-library--adding-your-personal-api-key",children:[],level:2},{value:"Adding your document",id:"adding-your-document",children:[],level:2},{value:"Extracting dependencies",id:"extracting-dependencies",children:[],level:2},{value:"Saving your results",id:"saving-your-results",children:[],level:2},{value:"Code set",id:"code-set",children:[],level:2}],u={toc:d};function c(e){var n=e.components,l=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},u,l,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"dependency-parser"},"Dependency Parser"),(0,o.kt)("h2",{id:"video"},"Video"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://youtu.be/IM4DiieXCRY"},(0,o.kt)("img",{alt:"Dependency parser video",src:t(7602).Z}))),(0,o.kt)("h1",{id:"whats-a-dependency-parser"},(0,o.kt)("strong",{parentName:"h1"},"What\u2019s a dependency parser?")),(0,o.kt)("p",null,"A dependency parser or dependency analyzer highlights the ",(0,o.kt)("strong",{parentName:"p"},"dependency relationships in a sentence")," (what or who is the subject or object). It\u2019s a computational linguistics tool built on a group of rules specific to the analyzed language. A dependency parser can also be built based on a machine-learning model that derives grammatical rules from a manually-labelled corpus. ",(0,o.kt)("strong",{parentName:"p"},"What does it do? How does it work?"),"The parser organizes the elements of a sentence based on their syntactic and semantic importance, and the links that exist between them."),(0,o.kt)("h2",{id:"importing-the-library--adding-your-personal-api-key"},"Importing the library & adding your personal API key"),(0,o.kt)("p",null,"If you want to highlight the dependency relationships in a sentence from your document you'll need to have your document saved on your computer."),(0,o.kt)("p",null,"After you've installed the Lettria package on Python you'll need to import the library."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"import lettria\n")),(0,o.kt)("p",null,"Next you are going to need to include your personal API key which can be found"),(0,o.kt)("p",null,"via the Lettria platform in the dashboard."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"api_key = 'your personal API key'\nnlp = lettria.NLP(api_key)\n")),(0,o.kt)("h2",{id:"adding-your-document"},"Adding your document"),(0,o.kt)("p",null,"Now you will need to open your saved document. Be sure to add the name of"),(0,o.kt)("p",null,"\u2018your file\u2019 since it may differ from the name of the example file."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'with open("example.txt", "r") as f:\n    example_data = f.readlines()\n')),(0,o.kt)("p",null,"Next add your document to the NLP."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"nlp.add_document(example_data)\n")),(0,o.kt)("h2",{id:"extracting-dependencies"},"Extracting dependencies"),(0,o.kt)("p",null,"Next you will need to print the tokens with their corresponding reference and dependency."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"print([[(t.token, t.ref, t.dep) for t in s.tokens] for s in nlp.sentences])\n")),(0,o.kt)("p",null,"In the results you will find the token, possessive determiner and the dependency tag. For a full list of dependency tags and possessive determiners please check out our doc center for the documentation."),(0,o.kt)("h2",{id:"saving-your-results"},"Saving your results"),(0,o.kt)("p",null,"In order to save your results you can use the following command."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"nlp.save_results(\u2018example_results')\n")),(0,o.kt)("p",null,"And a json file with your results that can be used for further analysis will be saved."),(0,o.kt)("h2",{id:"code-set"},"Code set"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'import lettria\n\napi_key = \'your personal API key\'\nnlp = lettria.NLP(api_key)\n\nwith open("example.txt", "r") as f:\n    example_data = f.readlines()\n\nnlp.add_document(example_data)\n\nprint([[(t.token, t.ref, t.dep) for t in s.tokens] for s in nlp.sentences])\n\nnlp.save_results(\u2018example_results\')\n')))}c.isMDXComponent=!0},7602:function(e,n,t){n.Z=t.p+"assets/images/dependency-thumbnail-4daf9ccdeba78c41f843516e17327320.png"}}]);